{"pageProps":{"post":{"title":"Android Continuous Background Services with NativeScript","date":"2019-08-08T00:00:00+0300","tags":["nativescript","android","typescript"],"image":{"link":"/content/continuous-background-service/jonathan-kemper-t6Wmvbw_MdI-unsplash.jpg","author":{"name":"Jonathan Kemper","link":"https://unsplash.com/@jupp"},"source":{"name":"Unsplash","link":"https://unsplash.com"}},"medium":"https://ozymandiasthegreat.medium.com/android-continuous-background-services-with-nativescript-a0840fc1eceb","devto":"https://dev.to/ozymandiasthegreat/android-continuous-background-services-with-nativescript-42c9","slug":"2019/08/08/continuous-background-service","content":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"So I set out to make specialized voice assistant on Android. As I have strenuous relationship with Java to say the least, and I haven't yet had time to play with Kotlin, NativeScript seemed like the obvious choice.","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":215,"offset":214}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":215,"offset":214}}},{"type":"paragraph","children":[{"type":"text","value":"Now this is a work in progress, but I already learned a lot about Android and I want to share some of my findings with you.","position":{"start":{"line":3,"column":1,"offset":216},"end":{"line":3,"column":124,"offset":339}}}],"position":{"start":{"line":3,"column":1,"offset":216},"end":{"line":3,"column":124,"offset":339}}},{"type":"html","value":"<!--more-->","position":{"start":{"line":5,"column":1,"offset":341},"end":{"line":5,"column":12,"offset":352}}},{"type":"paragraph","children":[{"type":"text","value":"First for this task I need to constantly listen for the wake word and react accordingly. Obvious choice to implement this on any platform would be some sort of background service or daemon.","position":{"start":{"line":7,"column":1,"offset":354},"end":{"line":7,"column":190,"offset":543}}}],"position":{"start":{"line":7,"column":1,"offset":354},"end":{"line":7,"column":190,"offset":543}}},{"type":"paragraph","children":[{"type":"text","value":"When googling NativeScript and background services an excellent tutorial and an example repo come up on the top (","position":{"start":{"line":9,"column":1,"offset":545},"end":{"line":9,"column":114,"offset":658}}},{"type":"link","title":null,"url":"https://www.nativescript.org/blog/using-android-background-services-in-nativescript","children":[{"type":"text","value":"I'm talking about this","position":{"start":{"line":9,"column":115,"offset":659},"end":{"line":9,"column":137,"offset":681}}}],"position":{"start":{"line":9,"column":114,"offset":658},"end":{"line":9,"column":223,"offset":767}}},{"type":"text","value":").","position":{"start":{"line":9,"column":223,"offset":767},"end":{"line":9,"column":225,"offset":769}}}],"position":{"start":{"line":9,"column":1,"offset":545},"end":{"line":9,"column":225,"offset":769}}},{"type":"paragraph","children":[{"type":"text","value":"Alas, this is using IntentService which only runs on a schedule and exits once it's tasks are complete.\nCreating a continuous background service though is pretty easy, there's just a lack of examples on this topic (which this article aims to fix).","position":{"start":{"line":11,"column":1,"offset":771},"end":{"line":12,"column":144,"offset":1018}}}],"position":{"start":{"line":11,"column":1,"offset":771},"end":{"line":12,"column":144,"offset":1018}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The setup","position":{"start":{"line":14,"column":4,"offset":1023},"end":{"line":14,"column":13,"offset":1032}}}],"position":{"start":{"line":14,"column":1,"offset":1020},"end":{"line":14,"column":13,"offset":1032}}},{"type":"paragraph","children":[{"type":"text","value":"You can find complete working example repo ","position":{"start":{"line":16,"column":1,"offset":1034},"end":{"line":16,"column":44,"offset":1077}}},{"type":"link","title":null,"url":"https://github.com/OzymandiasTheGreat/Nativescript-ServiceExample","children":[{"type":"text","value":"here","position":{"start":{"line":16,"column":45,"offset":1078},"end":{"line":16,"column":49,"offset":1082}}}],"position":{"start":{"line":16,"column":44,"offset":1077},"end":{"line":16,"column":117,"offset":1150}}},{"type":"text","value":".","position":{"start":{"line":16,"column":117,"offset":1150},"end":{"line":16,"column":118,"offset":1151}}}],"position":{"start":{"line":16,"column":1,"offset":1034},"end":{"line":16,"column":118,"offset":1151}}},{"type":"paragraph","children":[{"type":"text","value":"For this article I'll assume that we're working with\ntypescript hello_world template:\n","position":{"start":{"line":18,"column":1,"offset":1153},"end":{"line":20,"column":1,"offset":1239}}},{"type":"inlineCode","value":"tns create ServiceExample --ts --appid tk.ozymandias.ServiceExample","position":{"start":{"line":20,"column":1,"offset":1239},"end":{"line":20,"column":70,"offset":1308}}}],"position":{"start":{"line":18,"column":1,"offset":1153},"end":{"line":20,"column":70,"offset":1308}}},{"type":"paragraph","children":[{"type":"text","value":"It shouldn't be difficult to adapt to other templates/technologies.","position":{"start":{"line":22,"column":1,"offset":1310},"end":{"line":22,"column":68,"offset":1377}}}],"position":{"start":{"line":22,"column":1,"offset":1310},"end":{"line":22,"column":68,"offset":1377}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The service","position":{"start":{"line":24,"column":4,"offset":1382},"end":{"line":24,"column":15,"offset":1393}}}],"position":{"start":{"line":24,"column":1,"offset":1379},"end":{"line":24,"column":15,"offset":1393}}},{"type":"paragraph","children":[{"type":"text","value":"First create a new subfolder under ","position":{"start":{"line":26,"column":1,"offset":1395},"end":{"line":26,"column":36,"offset":1430}}},{"type":"inlineCode","value":"app/","position":{"start":{"line":26,"column":36,"offset":1430},"end":{"line":26,"column":42,"offset":1436}}},{"type":"text","value":", lets call it ","position":{"start":{"line":26,"column":42,"offset":1436},"end":{"line":26,"column":57,"offset":1451}}},{"type":"inlineCode","value":"service","position":{"start":{"line":26,"column":57,"offset":1451},"end":{"line":26,"column":66,"offset":1460}}},{"type":"text","value":". This is purely to keep your project structure clean and tidy.\nNow create a new file under ","position":{"start":{"line":26,"column":66,"offset":1460},"end":{"line":27,"column":29,"offset":1552}}},{"type":"inlineCode","value":"app/service/continuous_service.android.ts","position":{"start":{"line":27,"column":29,"offset":1552},"end":{"line":27,"column":72,"offset":1595}}},{"type":"text","value":" with these contents","position":{"start":{"line":27,"column":72,"offset":1595},"end":{"line":27,"column":92,"offset":1615}}}],"position":{"start":{"line":26,"column":1,"offset":1395},"end":{"line":27,"column":92,"offset":1615}}},{"type":"code","lang":"typescript","meta":null,"value":"export const CONTINUOUS_SERVICE_CLASSNAME = \"tk.ozymandias.ServiceExample.Continuous_Service\";\n\n@JavaProxy(\"tk.ozymandias.ServiceExample.Continuous_Service\")\nclass Continuous_Service extends android.app.Service {\n    private timerId: number;\n\n    onBind(): android.os.IBinder {\n        return null;\n    }\n\n    onCreate(): void {\n        super.onCreate();\n        console.log(\"SERVICE CREATED\");\n\n        if (!this.timerId) {\n            this.timerId = setInterval(() => {\n                console.log(\"PING\");\n            }, 1000)\n        }\n    }\n\n    onStartCommand(intent: android.content.Intent, flags: number, startId: number): number {\n        console.log(\"SERVICE STARTED\");\n        return android.app.Service.START_REDELIVER_INTENT;\n    }\n\n    onDestroy(): void {\n        console.log(\"SERVICE DESTROYED\");\n        super.onDestroy();\n        clearInterval(this.timerId);\n    }\n}","position":{"start":{"line":29,"column":1,"offset":1617},"end":{"line":62,"column":4,"offset":2518}}},{"type":"paragraph","children":[{"type":"text","value":"Now this is a very basic service, it just runs in the background and prints \"PING\" to the console every second.","position":{"start":{"line":64,"column":1,"offset":2520},"end":{"line":64,"column":112,"offset":2631}}}],"position":{"start":{"line":64,"column":1,"offset":2520},"end":{"line":64,"column":112,"offset":2631}}},{"type":"paragraph","children":[{"type":"text","value":"At the top we export service name as a constant, will be using this in a few places later.\nAlas you need to specify the service name as a string literal in at least two more places.","position":{"start":{"line":66,"column":1,"offset":2633},"end":{"line":67,"column":91,"offset":2814}}}],"position":{"start":{"line":66,"column":1,"offset":2633},"end":{"line":67,"column":91,"offset":2814}}},{"type":"paragraph","children":[{"type":"text","value":"First one is obvious here: the ","position":{"start":{"line":69,"column":1,"offset":2816},"end":{"line":69,"column":32,"offset":2847}}},{"type":"inlineCode","value":"@JavaProxy","position":{"start":{"line":69,"column":32,"offset":2847},"end":{"line":69,"column":44,"offset":2859}}},{"type":"text","value":" annotation.\nUsing a variable here will throw errors about existing extends and rather than the variable value it will be undefined.","position":{"start":{"line":69,"column":44,"offset":2859},"end":{"line":70,"column":120,"offset":2991}}}],"position":{"start":{"line":69,"column":1,"offset":2816},"end":{"line":70,"column":120,"offset":2991}}},{"type":"paragraph","children":[{"type":"text","value":"Second will be in the manifest. More on that later.","position":{"start":{"line":72,"column":1,"offset":2993},"end":{"line":72,"column":52,"offset":3044}}}],"position":{"start":{"line":72,"column":1,"offset":2993},"end":{"line":72,"column":52,"offset":3044}}},{"type":"paragraph","children":[{"type":"inlineCode","value":"onCreate","position":{"start":{"line":74,"column":1,"offset":3046},"end":{"line":74,"column":11,"offset":3056}}},{"type":"text","value":" is called once when the service is instantiated, ","position":{"start":{"line":74,"column":11,"offset":3056},"end":{"line":74,"column":61,"offset":3106}}},{"type":"inlineCode","value":"onStartCommand","position":{"start":{"line":74,"column":61,"offset":3106},"end":{"line":74,"column":77,"offset":3122}}},{"type":"text","value":" is called every time the service is started and ","position":{"start":{"line":74,"column":77,"offset":3122},"end":{"line":74,"column":126,"offset":3171}}},{"type":"inlineCode","value":"onDestroy","position":{"start":{"line":74,"column":126,"offset":3171},"end":{"line":74,"column":137,"offset":3182}}},{"type":"text","value":" is called when the service exits.","position":{"start":{"line":74,"column":137,"offset":3182},"end":{"line":74,"column":171,"offset":3216}}}],"position":{"start":{"line":74,"column":1,"offset":3046},"end":{"line":74,"column":171,"offset":3216}}},{"type":"paragraph","children":[{"type":"text","value":"How the service is started and restarted depends on what\nyou return from ","position":{"start":{"line":76,"column":1,"offset":3218},"end":{"line":77,"column":17,"offset":3291}}},{"type":"inlineCode","value":"onStartCommand","position":{"start":{"line":77,"column":17,"offset":3291},"end":{"line":77,"column":33,"offset":3307}}},{"type":"text","value":". You may be tempted to return ","position":{"start":{"line":77,"column":33,"offset":3307},"end":{"line":77,"column":64,"offset":3338}}},{"type":"inlineCode","value":"START_STICKY","position":{"start":{"line":77,"column":64,"offset":3338},"end":{"line":77,"column":78,"offset":3352}}},{"type":"text","value":" here, but that will cause crashes when your app is killed because the system will try to restart your service with ","position":{"start":{"line":77,"column":78,"offset":3352},"end":{"line":77,"column":194,"offset":3468}}},{"type":"inlineCode","value":"null","position":{"start":{"line":77,"column":194,"offset":3468},"end":{"line":77,"column":200,"offset":3474}}},{"type":"text","value":" intent.","position":{"start":{"line":77,"column":200,"offset":3474},"end":{"line":77,"column":208,"offset":3482}}}],"position":{"start":{"line":76,"column":1,"offset":3218},"end":{"line":77,"column":208,"offset":3482}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Making it continuous","position":{"start":{"line":79,"column":4,"offset":3487},"end":{"line":79,"column":24,"offset":3507}}}],"position":{"start":{"line":79,"column":1,"offset":3484},"end":{"line":79,"column":24,"offset":3507}}},{"type":"paragraph","children":[{"type":"text","value":"So far we have a functional service that starts with your app! But how do we keep it running when the app exits or is killed?","position":{"start":{"line":81,"column":1,"offset":3509},"end":{"line":81,"column":126,"offset":3634}}}],"position":{"start":{"line":81,"column":1,"offset":3509},"end":{"line":81,"column":126,"offset":3634}}},{"type":"paragraph","children":[{"type":"text","value":"Let's start by making a broadcast receiver.","position":{"start":{"line":83,"column":1,"offset":3636},"end":{"line":83,"column":44,"offset":3679}}}],"position":{"start":{"line":83,"column":1,"offset":3636},"end":{"line":83,"column":44,"offset":3679}}},{"type":"code","lang":"typescript","meta":null,"value":"import { CONTINUOUS_SERVICE_CLASSNAME } from \"./continuous-service.android\";\n\n\nexport const RESTART_RECEIVER_CLASSNAME = \"tk.ozymandias.ServiceExample.Restart_Receiver\";\n\n\n@JavaProxy(\"tk.ozymandias.ServiceExample.Restart_Receiver\")\nclass Restart_Receiver extends android.content.BroadcastReceiver {\n    onReceive(context: android.content.Context, intent: android.content.Intent): void {\n        console.log(\"RESTART INTENT RECEIVED\");\n        const serviceIntent = new android.content.Intent();\n        serviceIntent.setClassName(context, CONTINUOUS_SERVICE_CLASSNAME);\n        context.startService(serviceIntent);\n    }\n}","position":{"start":{"line":85,"column":1,"offset":3681},"end":{"line":101,"column":4,"offset":4321}}},{"type":"paragraph","children":[{"type":"text","value":"Then let's modify our service a bit to invoke the broadcast receiver on exit so it can restart our service.","position":{"start":{"line":103,"column":1,"offset":4323},"end":{"line":103,"column":108,"offset":4430}}}],"position":{"start":{"line":103,"column":1,"offset":4323},"end":{"line":103,"column":108,"offset":4430}}},{"type":"code","lang":"typescript","meta":null,"value":"// At the top\nimport { RESTART_RECEIVER_CLASSNAME } from \"./restart-receiver.android\";\n\n// In the onDestroy method in our service\n    onDestroy(): void {\n        // ...\n        const restartIntent = new android.content.Intent();\n        restartIntent.setClassName(this, RESTART_RECEIVER_CLASSNAME);\n        this.sendBroadcast(restartIntent);\n    }","position":{"start":{"line":105,"column":1,"offset":4432},"end":{"line":116,"column":4,"offset":4797}}},{"type":"paragraph","children":[{"type":"text","value":"You should also implement ","position":{"start":{"line":118,"column":1,"offset":4799},"end":{"line":118,"column":27,"offset":4825}}},{"type":"inlineCode","value":"onTaskRemoved","position":{"start":{"line":118,"column":27,"offset":4825},"end":{"line":118,"column":42,"offset":4840}}},{"type":"text","value":" method in our service.\nIt is called when user swipes away your app from the recent view.\nIn this situation (and probably others) ","position":{"start":{"line":118,"column":42,"offset":4840},"end":{"line":120,"column":41,"offset":4970}}},{"type":"inlineCode","value":"onDestroy","position":{"start":{"line":120,"column":41,"offset":4970},"end":{"line":120,"column":52,"offset":4981}}},{"type":"text","value":" isn't called by default.\nSo let's invoke ","position":{"start":{"line":120,"column":52,"offset":4981},"end":{"line":121,"column":17,"offset":5023}}},{"type":"inlineCode","value":"onDestroy","position":{"start":{"line":121,"column":17,"offset":5023},"end":{"line":121,"column":28,"offset":5034}}},{"type":"text","value":" by calling ","position":{"start":{"line":121,"column":28,"offset":5034},"end":{"line":121,"column":40,"offset":5046}}},{"type":"inlineCode","value":"stopSelf","position":{"start":{"line":121,"column":40,"offset":5046},"end":{"line":121,"column":50,"offset":5056}}},{"type":"text","value":"!","position":{"start":{"line":121,"column":50,"offset":5056},"end":{"line":121,"column":51,"offset":5057}}}],"position":{"start":{"line":118,"column":1,"offset":4799},"end":{"line":121,"column":51,"offset":5057}}},{"type":"code","lang":"typescript","meta":null,"value":"// ...\n    onTaskRemoved(intent: android.content.Intent): void {\n        console.log(\"TASK REMOVED\");\n        this.stopSelf();\n    }","position":{"start":{"line":123,"column":1,"offset":5059},"end":{"line":129,"column":4,"offset":5209}}},{"type":"paragraph","children":[{"type":"text","value":"Now we have a continuously running service! When the app exits or is killed, we invoke our broadcast receiver,\nwhich in turn restarts our service.","position":{"start":{"line":131,"column":1,"offset":5211},"end":{"line":132,"column":36,"offset":5357}}}],"position":{"start":{"line":131,"column":1,"offset":5211},"end":{"line":132,"column":36,"offset":5357}}},{"type":"paragraph","children":[{"type":"text","value":"Unfortunately in newer versions of Android when system\nkills your app because of low memory or due to battery optimizations, ","position":{"start":{"line":134,"column":1,"offset":5359},"end":{"line":135,"column":71,"offset":5484}}},{"type":"inlineCode","value":"onDestroy","position":{"start":{"line":135,"column":71,"offset":5484},"end":{"line":135,"column":82,"offset":5495}}},{"type":"text","value":" isn't guaranteed to be called.","position":{"start":{"line":135,"column":82,"offset":5495},"end":{"line":135,"column":113,"offset":5526}}}],"position":{"start":{"line":134,"column":1,"offset":5359},"end":{"line":135,"column":113,"offset":5526}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Foreground Service","position":{"start":{"line":137,"column":4,"offset":5531},"end":{"line":137,"column":22,"offset":5549}}}],"position":{"start":{"line":137,"column":1,"offset":5528},"end":{"line":137,"column":22,"offset":5549}}},{"type":"paragraph","children":[{"type":"text","value":"Fortunately there's an official way to work around that.\nWhat we need is to make our service a Foreground Service.\nThe downside is that we must present a persistent notification, however starting with Oreo this notification can be hidden from the system settings\nwithout impacting our service.","position":{"start":{"line":139,"column":1,"offset":5551},"end":{"line":142,"column":31,"offset":5844}}}],"position":{"start":{"line":139,"column":1,"offset":5551},"end":{"line":142,"column":31,"offset":5844}}},{"type":"paragraph","children":[{"type":"text","value":"We need to modify our service yet again, this time the\n","position":{"start":{"line":144,"column":1,"offset":5846},"end":{"line":145,"column":1,"offset":5901}}},{"type":"inlineCode","value":"onCreate","position":{"start":{"line":145,"column":1,"offset":5901},"end":{"line":145,"column":11,"offset":5911}}},{"type":"text","value":" method:","position":{"start":{"line":145,"column":11,"offset":5911},"end":{"line":145,"column":19,"offset":5919}}}],"position":{"start":{"line":144,"column":1,"offset":5846},"end":{"line":145,"column":19,"offset":5919}}},{"type":"code","lang":"typescript","meta":null,"value":"\n// In the onCreate method in our service\n    onCreate(): void {\n        // ...\n        const builder: android.app.Notification.Builder = new android.app.Notification.Builder(app.android.context);\n        // Need to check api level, NotificationChannel is required but only available on Oreo and above\n        if (android.os.Build.VERSION.SDK_INT >= 26) {\n            const channel: android.app.NotificationChannel = new android.app.NotificationChannel(\n                \"persistence\", \"Service running indicator\", android.app.NotificationManager.IMPORTANCE_LOW\n            );\n            const manager: android.app.NotificationManager = (<android.app.Activity>app.android.context).getSystemService(android.content.Context.NOTIFICATION_SERVICE);\n            channel.enableLights(false);\n            channel.enableVibration(false);\n            manager.createNotificationChannel(channel);\n            builder.setChannelId(\"persistence\");\n        }\n        const notification: android.app.Notification = builder.build();\n        this.startForeground(13, notification);\n    }","position":{"start":{"line":147,"column":1,"offset":5921},"end":{"line":167,"column":4,"offset":7009}}},{"type":"paragraph","children":[{"type":"text","value":"And this makes a continuous foreground service with a\npersistent notification that will keep running pretty\nmuch no matter what (it can still be forced stopped from the settings).","position":{"start":{"line":169,"column":1,"offset":7011},"end":{"line":171,"column":72,"offset":7190}}}],"position":{"start":{"line":169,"column":1,"offset":7011},"end":{"line":171,"column":72,"offset":7190}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Finishing touches","position":{"start":{"line":173,"column":4,"offset":7195},"end":{"line":173,"column":21,"offset":7212}}}],"position":{"start":{"line":173,"column":1,"offset":7192},"end":{"line":173,"column":21,"offset":7212}}},{"type":"paragraph","children":[{"type":"text","value":"Now if you try the code so far it will crash.\nThat's because we haven't declared anything in the\n","position":{"start":{"line":175,"column":1,"offset":7214},"end":{"line":177,"column":1,"offset":7311}}},{"type":"inlineCode","value":"AndroidManifest.xml","position":{"start":{"line":177,"column":1,"offset":7311},"end":{"line":177,"column":22,"offset":7332}}},{"type":"text","value":"!\nWhat we need to declare is the permissions we need (only on latest versions of Android), the service and the receiver.","position":{"start":{"line":177,"column":22,"offset":7332},"end":{"line":178,"column":119,"offset":7452}}}],"position":{"start":{"line":175,"column":1,"offset":7214},"end":{"line":178,"column":119,"offset":7452}}},{"type":"paragraph","children":[{"type":"text","value":"Without further ado, here's the manifest:","position":{"start":{"line":180,"column":1,"offset":7454},"end":{"line":180,"column":42,"offset":7495}}}],"position":{"start":{"line":180,"column":1,"offset":7454},"end":{"line":180,"column":42,"offset":7495}}},{"type":"code","lang":"xml","meta":null,"value":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"__PACKAGE__\"\n    android:versionCode=\"1\"\n    android:versionName=\"1.0\">\n\n    <supports-screens\n        android:smallScreens=\"true\"\n        android:normalScreens=\"true\"\n        android:largeScreens=\"true\"\n        android:xlargeScreens=\"true\"/>\n\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\n\n    <application\n        android:name=\"com.tns.NativeScriptApplication\"\n        android:allowBackup=\"true\"\n        android:icon=\"@drawable/icon\"\n        android:label=\"@string/app_name\"\n        android:theme=\"@style/AppTheme\">\n\n        <activity\n            android:name=\"com.tns.NativeScriptActivity\"\n            android:label=\"@string/title_activity_kimera\"\n            android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize|smallestScreenSize|screenLayout|locale|uiMode\"\n            android:theme=\"@style/LaunchScreenTheme\">\n\n            <meta-data android:name=\"SET_THEME_ON_LAUNCH\" android:resource=\"@style/AppTheme\" />\n\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\"com.tns.ErrorReportActivity\"/>\n        <service android:enabled=\"true\" android:name=\"tk.ozymandias.ServiceExample.Continuous_Service\" />\n        <receiver\n            android:name=\"tk.ozymandias.ServiceExample.Restart_Receiver\"\n            android:enabled=\"true\"\n            android:exported=\"true\"\n            android:label=\"ContinuousServiceRestarter\" />\n    </application>\n</manifest>","position":{"start":{"line":182,"column":1,"offset":7497},"end":{"line":229,"column":4,"offset":9459}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Extra Bonus","position":{"start":{"line":231,"column":4,"offset":9464},"end":{"line":231,"column":15,"offset":9475}}}],"position":{"start":{"line":231,"column":1,"offset":9461},"end":{"line":231,"column":15,"offset":9475}}},{"type":"paragraph","children":[{"type":"text","value":"You may have noticed that the notification we get is\ngeneric \"app is running\" notification that goes to settings when tapped.\nWe can do better!","position":{"start":{"line":233,"column":1,"offset":9477},"end":{"line":235,"column":18,"offset":9620}}}],"position":{"start":{"line":233,"column":1,"offset":9477},"end":{"line":235,"column":18,"offset":9620}}},{"type":"code","lang":"typescript","meta":null,"value":"// In the onCreate method in our service\n    onCreate(): void {\n        // ...\n        const appIntent: android.content.Intent = new android.content.Intent(app.android.context, com.tns.NativeScriptActivity.class);\n        const pendingIntent: android.app.PendingIntent = android.app.PendingIntent.getActivity(app.android.context, 0, appIntent, 0);\n        const builder: android.app.Notification.Builder = new android.app.Notification.Builder(app.android.context);\n        builder\n            .setContentText(\"Custom notification, F'Yeah!\")\n            .setSmallIcon(android.R.drawable.btn_star_big_on)\n            .setContentIntent(pendingIntent);\n        // ...\n    }","position":{"start":{"line":237,"column":1,"offset":9622},"end":{"line":250,"column":4,"offset":10309}}},{"type":"paragraph","children":[{"type":"text","value":"You may need to ","position":{"start":{"line":252,"column":1,"offset":10311},"end":{"line":252,"column":17,"offset":10327}}},{"type":"inlineCode","value":"declare const com: any;","position":{"start":{"line":252,"column":17,"offset":10327},"end":{"line":252,"column":42,"offset":10352}}},{"type":"text","value":" somewhere\nnear the top of the file or typescript might throw a fit.","position":{"start":{"line":252,"column":42,"offset":10352},"end":{"line":253,"column":58,"offset":10420}}}],"position":{"start":{"line":252,"column":1,"offset":10311},"end":{"line":253,"column":58,"offset":10420}}},{"type":"paragraph","children":[{"type":"text","value":"So what have we done here?","position":{"start":{"line":255,"column":1,"offset":10422},"end":{"line":255,"column":27,"offset":10448}}}],"position":{"start":{"line":255,"column":1,"offset":10422},"end":{"line":255,"column":27,"offset":10448}}},{"type":"paragraph","children":[{"type":"text","value":"We created a pending intent pointing to the main activity of our app, so now when notification is tapped\nit will open your app.\nAs for notification options, the important bits are\n","position":{"start":{"line":257,"column":1,"offset":10450},"end":{"line":260,"column":1,"offset":10630}}},{"type":"inlineCode","value":"setContentText","position":{"start":{"line":260,"column":1,"offset":10630},"end":{"line":260,"column":17,"offset":10646}}},{"type":"text","value":" and ","position":{"start":{"line":260,"column":17,"offset":10646},"end":{"line":260,"column":22,"offset":10651}}},{"type":"inlineCode","value":"setSmallIcon","position":{"start":{"line":260,"column":22,"offset":10651},"end":{"line":260,"column":36,"offset":10665}}},{"type":"text","value":". If both of these aren't present at the minimum, you'll still get a generic\nnotification.","position":{"start":{"line":260,"column":36,"offset":10665},"end":{"line":261,"column":14,"offset":10755}}}],"position":{"start":{"line":257,"column":1,"offset":10450},"end":{"line":261,"column":14,"offset":10755}}},{"type":"heading","depth":2,"children":[{"type":"text","value":"That's all folks","position":{"start":{"line":263,"column":4,"offset":10760},"end":{"line":263,"column":20,"offset":10776}}}],"position":{"start":{"line":263,"column":1,"offset":10757},"end":{"line":263,"column":20,"offset":10776}}},{"type":"paragraph","children":[{"type":"text","value":"This has been my first article, please be gentle.","position":{"start":{"line":265,"column":1,"offset":10778},"end":{"line":265,"column":50,"offset":10827}}}],"position":{"start":{"line":265,"column":1,"offset":10778},"end":{"line":265,"column":50,"offset":10827}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":266,"column":1,"offset":10828}}}}},"__N_SSG":true}